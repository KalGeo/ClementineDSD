/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -m -i dbus/metatypes.h -p dbus/udisks2block /media/manolo/G/github/ClementineDSDCursor/ClementineDSD/src/dbus/org.freedesktop.UDisks2.Block.xml
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef UDISKS2BLOCK_H
#define UDISKS2BLOCK_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "dbus/metatypes.h"

/*
 * Proxy class for interface org.freedesktop.UDisks2.Block
 */
class OrgFreedesktopUDisks2BlockInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.UDisks2.Block"; }

public:
    OrgFreedesktopUDisks2BlockInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopUDisks2BlockInterface();

    Q_PROPERTY(QDBusObjectPath Drive READ drive)
    inline QDBusObjectPath drive() const
    { return qvariant_cast< QDBusObjectPath >(property("Drive")); }

    Q_PROPERTY(QString IdLabel READ idLabel)
    inline QString idLabel() const
    { return qvariant_cast< QString >(property("IdLabel")); }

    Q_PROPERTY(QString IdUUID READ idUUID)
    inline QString idUUID() const
    { return qvariant_cast< QString >(property("IdUUID")); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

#endif
